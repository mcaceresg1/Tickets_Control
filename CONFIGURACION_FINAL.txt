================================================================
  SISTEMA DE TICKETS - CONFIGURACI√ìN FINAL
================================================================

FECHA: 28 de Octubre de 2025
SERVIDOR: WIN-SNA9N63HF99

================================================================
1. RESUMEN DE CAMBIOS REALIZADOS
================================================================

‚úÖ Migraci√≥n de dominios completada:
   - tp.nexwork-peru.com ‚Üí tk.nexwork-peru.com
   - apitp.nexwork-peru.com ‚Üí apitk.nexwork-peru.com

‚úÖ Configuraci√≥n de IIS:
   - Frontend funcionando en IIS (puerto 4200 HTTPS)
   - API funcionando como proceso Node.js independiente (puerto 3000 HTTP)
   - Regla global HTTP‚ÜíHTTPS deshabilitada temporalmente

‚úÖ Archivos actualizados:
   - cors.config.ts: Puertos corregidos (4200 para frontend)
   - web.config (Frontend): CSP actualizado, redirect HTTPS corregido
   - web.config (API): Configurado para iisnode (no se usa actualmente)
   - Scripts de inicio actualizados

================================================================
2. ARQUITECTURA ACTUAL
================================================================

FRONTEND (Angular):
  URL: https://tk.nexwork-peru.com:4200
  Servidor: IIS
  Estado: ‚úÖ Funcionando
  
BACKEND (Node.js + Express):
  URL: http://localhost:3000
  Servidor: Node.js independiente (NO iisnode)
  Estado: ‚úÖ Funcionando
  
  Endpoints:
    - Health: http://localhost:3000/health
    - API: http://localhost:3000/api
    - Swagger: http://localhost:3000/api-docs
    - Login: http://localhost:3000/api/auth/login

================================================================
3. C√ìMO INICIAR EL SISTEMA
================================================================

OPCI√ìN 1: Script Autom√°tico
---------------------------
Ejecutar: 1_ABRIR_API_PRIMERO.bat
- Detiene procesos Node.js previos
- Inicia la API con el script start-api.ps1
- Abre el navegador para verificar la API
- MANT√âN LA VENTANA DE POWERSHELL ABIERTA (azul)

Luego ejecutar: ABRIR_FRONTEND.bat
- Abre el frontend en el navegador

OPCI√ìN 2: Manual
---------------------------
1. Abrir PowerShell como Administrador
2. Navegar a: C:\WS_Tickets_Control\Tickets-Api
3. Ejecutar: .\start-api.ps1
4. Abrir navegador: https://tk.nexwork-peru.com:4200

================================================================
4. REINICIAR LA API
================================================================

Si necesitas reiniciar solo la API:
  Ejecutar: REINICIAR_API.bat

O manualmente:
  1. Detener: Get-Process | Where-Object { $_.ProcessName -eq 'node' } | Stop-Process -Force
  2. Iniciar: .\start-api.ps1

================================================================
5. PROBLEMAS RESUELTOS
================================================================

‚ùå PROBLEMA 1: iisnode error HRESULT 0x2, HTTP subStatus 1002
‚úÖ SOLUCI√ìN: API ejecut√°ndose como proceso Node.js independiente

‚ùå PROBLEMA 2: Redirect 301 en todos los requests
‚úÖ SOLUCI√ìN: Regla global HTTP‚ÜíHTTPS deshabilitada

‚ùå PROBLEMA 3: PhysicalPath vac√≠o en IIS
‚úÖ SOLUCI√ìN: Sitio recreado con path correcto

‚ùå PROBLEMA 4: CSP bloqueando Bootstrap Icons
‚úÖ SOLUCI√ìN: cdn.jsdelivr.net agregado a CSP

‚ùå PROBLEMA 5: CORS con puertos incorrectos
‚úÖ SOLUCI√ìN: cors.config.ts actualizado (puerto 4200)

================================================================
6. CONFIGURACI√ìN DEL CERTIFICADO SSL
================================================================

Ubicaci√≥n: C:\WS_Tickets_Control\Tickets-Web\cettificado_ssl\certificado.pfx
Contrase√±a: temppassword123

El certificado se configura en:
  - start-api.ps1 (variables de entorno)
  - IIS para el frontend (configurado)

================================================================
7. ARCHIVOS IMPORTANTES
================================================================

Scripts de inicio:
  - C:\WS_Tickets_Control\Tickets-Api\start-api.ps1
  - C:\WS_Tickets_Control\1_ABRIR_API_PRIMERO.bat
  - C:\WS_Tickets_Control\REINICIAR_API.bat

Configuraci√≥n:
  - Tickets-Api\src\shared\config\cors.config.ts
  - Tickets-Web\web.config
  - Tickets-Api\web.config (en proyecto ra√≠z)

Logs:
  - Tickets-Api\dist\api-stdout.log
  - Tickets-Api\dist\api-stderr.log

================================================================
8. PR√ìXIMOS PASOS RECOMENDADOS
================================================================

1. ‚ö†Ô∏è  Configurar servicio de Windows para iniciar API autom√°ticamente
   - Usar NSSM (Non-Sucking Service Manager) o similar
   - Garantizar que la API inicie al arrancar el servidor

2. üîí Configurar HTTPS para la API
   - Verificar contrase√±a del certificado.pfx
   - O generar nuevo certificado si es necesario

3. üåê Habilitar regla HTTP‚ÜíHTTPS global (si es necesario)
   - Solo despu√©s de confirmar que HTTPS funciona

4. üîç Monitoreo
   - Implementar logs persistentes
   - Configurar alertas de ca√≠da del servicio

5. üîê Seguridad
   - Cambiar contrase√±a del certificado en producci√≥n
   - Revisar configuraciones de CORS para producci√≥n

================================================================
9. CONTACTOS Y SOPORTE
================================================================

Repositorios GitHub:
  - Frontend: https://github.com/mcaceresg1/Tickets-Web.git
  - Backend: https://github.com/mcaceresg1/Tickets-Api.git

Documentaci√≥n:
  - Este archivo: CONFIGURACION_FINAL.txt
  - Instrucciones SSL: INSTRUCCIONES_SSL_IIS.txt
  - Iniciar todo: INICIAR_TODO.txt

================================================================
FIN DEL DOCUMENTO
================================================================




